name: CI E2E Overlay
on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/ci-e2e-overlay.yml'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.json'
  pull_request:
    branches: [ main ]
jobs:
  e2e:
    name: Playwright cross-browser E2E
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      issues: write
      actions: read
      id-token: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Playwright
        run: |
          npm -g i playwright@1.48.2 @playwright/test@1.48.2
          npx playwright install --with-deps
      - name: Generate Playwright configuration
        run: |
          cat > playwright.config.ts << 'EOF'
          import { defineConfig, devices } from '@playwright/test';
          export default defineConfig({
            testDir: './e2e-tests',
            fullyParallel: false,
            forbidOnly: !!process.env.CI,
            retries: process.env.CI ? 1 : 0,
            workers: 1,
            reporter: 'html',
            use: {
              headless: true,
              screenshot: 'only-on-failure',
              video: 'retain-on-failure',
              trace: 'retain-on-failure',
            },
            projects: [
              {
                name: 'chromium',
                use: { ...devices['Desktop Chrome'] },
              },
              {
                name: 'firefox',
                use: { ...devices['Desktop Firefox'] },
              },
              {
                name: 'webkit',
                use: { ...devices['Desktop Safari'] },
              },
            ],
          });
          EOF
      - name: Prepare overlay app from CDN
        run: |
          mkdir -p overlay
          cat > overlay/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8"/>
              <title>Overlay QA</title>
              <meta content="width=device-width,initial-scale=1" name="viewport"/>
              <link href="https://cdn.jsdelivr.net" rel="preconnect"/>
              <link href="https://unpkg.com" rel="preconnect"/>
              <link href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-grid.css" rel="stylesheet"/>
              <link href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-theme-quartz.css" rel="stylesheet"/>
            </head>
            <body>
              <div id="app"></div>
              <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/dayjs@1/dayjs.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/uuid@9.0.1/dist/umd/uuidv4.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/gridstack@10.1.2/dist/gridstack-all.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/mermaid@10.9.0/dist/mermaid.min.js"></script>
              <script src="https://raw.githubusercontent.com/edcet/perplexity-library-power-overlay/main/perplexity-library-power-overlay.user.js"></script>
            </body>
          </html>
          EOF
      - name: Write Playwright tests
        run: |
          mkdir -p e2e-tests
          cat > e2e-tests/overlay-smoke.spec.ts << 'EOF'
          import { test, expect } from '@playwright/test';
          test('overlay loads and initializes', async ({ page }) => {
            await page.goto('file://' + process.cwd() + '/overlay/index.html');
            await page.waitForTimeout(3000);
            const appDiv = await page.locator('#app');
            await expect(appDiv).toBeVisible();
          });
          EOF
      - name: Run Playwright tests on matrix browser
        id: playwright-test
        continue-on-error: true
        run: |
          npx playwright test --project=${{ matrix.browser }} || echo "TESTS_FAILED_${{ matrix.browser }}=1" >> $GITHUB_ENV
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 7
  aggregate:
    name: aggregate
    needs: e2e
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Aggregate results
        run: echo "All E2E jobs completed"
